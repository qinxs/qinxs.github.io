<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://7bxing.com</id>
    <title>qinxs小站 • Posts by &#34;javascript&#34; category</title>
    <link href="https://7bxing.com" />
    <updated>2020-09-08T14:15:55.000Z</updated>
    <category term="其他" />
    <category term="Hexo备份" />
    <category term="Shell" />
    <category term="猜数字游戏" />
    <category term="VIDAA系统" />
    <category term="git" />
    <category term="短网址生成" />
    <category term="javascript" />
    <entry>
        <id>https://7bxing.com/posts/9c28944f/</id>
        <title>「硬核JS」一次搞懂JS运行机制</title>
        <link rel="alternate" href="https://7bxing.com/posts/9c28944f/"/>
        <content type="html">&lt;p&gt;从零到一百再到一，从多方面了解JS的运行机制，体会更深刻&lt;/p&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;h2 id=&#34;前言&#34;&gt;&lt;a href=&#34;#前言&#34; class=&#34;headerlink&#34; title=&#34;前言&#34;&gt;&lt;/a&gt;前言&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;来自原作者的开场白：&lt;/p&gt;
&lt;p&gt;从开始做前端到目前为止，陆续看了很多帖子讲JS运行机制，看过不久就忘了，还是自己理一遍好些&lt;br&gt;通过码字使自己对JS运行机制相关内容更加深刻(自己用心写过的贴子，内容也会牢记于心)&lt;br&gt;顺道给大家看看(我太难了，深夜码字，反复修改，说这么多就是想请你点个赞在看)&lt;br&gt;参考了很多资料(帖子)，取其精华，去其糟糠，都在文末，可自行了解&lt;/p&gt;
&lt;p&gt;是时候搞一波我大js了&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本文大致分为以下这样的步骤来帮助我们由广入深更加清晰的了解JS运行机制&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;首先我们要了解进程和线程的概念&lt;/li&gt;
&lt;li&gt;其次我们要知道浏览器的进程线程常识&lt;/li&gt;
&lt;li&gt;再然后通过Event Loop、宏任务(macrotask)微任务(microtask)来看浏览器的几个线程间是怎样配合的&lt;/li&gt;
&lt;li&gt;再然后通过例子来印证我们的猜想&lt;/li&gt;
&lt;li&gt;最后提下NodeJS的运行机制&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;灵魂一问&#34;&gt;&lt;a href=&#34;#灵魂一问&#34; class=&#34;headerlink&#34; title=&#34;灵魂一问&#34;&gt;&lt;/a&gt;灵魂一问&lt;/h2&gt;&lt;p&gt;JS运行机制在平常前端面试时不管是笔试题还是面试题命中率都极高&lt;/p&gt;
&lt;p&gt;说到JS运行机制，你知道多少&lt;/p&gt;
&lt;p&gt;看到这大家可能回说：JS运行机制嘛，很简单，事件循环、宏微任务那点东西&lt;/p&gt;
&lt;p&gt;是的，作为一名前端我们都了解，但是如果这真的面试问到了这个地方，你真的可以答好吗(灵魂一问️)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不管你对JS了解多少，到这里大家不妨先停止一下阅读，假设你目前在面试，面试官让你阐述下JS运行机制，思考下你的答案，用20秒的时间(面试时20s已经很长了)，然后带着答案再接着往下看，有人曾经说过：没有思考的阅读纯粹是消磨时间罢了，这话很好(因为是我说的，皮一下)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;也有很多刚开始接触JS的同学会被任务队列 执行栈 微任务 宏任务这些高大上点的名次搞的很懵&lt;/p&gt;
&lt;p&gt;接下来，我们来细致的梳理一遍你就可以清晰的了解它们了&lt;/p&gt;
&lt;h2 id=&#34;进程与线程&#34;&gt;&lt;a href=&#34;#进程与线程&#34; class=&#34;headerlink&#34; title=&#34;进程与线程&#34;&gt;&lt;/a&gt;进程与线程&lt;/h2&gt;&lt;h3 id=&#34;什么是进程&#34;&gt;&lt;a href=&#34;#什么是进程&#34; class=&#34;headerlink&#34; title=&#34;什么是进程&#34;&gt;&lt;/a&gt;什么是进程&lt;/h3&gt;&lt;p&gt;我们都知道，CPU是计算机的核心，承担所有的计算任务&lt;/p&gt;
&lt;p&gt;官网说法，进程是CPU资源分配的最小单位&lt;/p&gt;
&lt;p&gt;字面意思就是进行中的程序，我将它理解为一个可以独立运行且拥有自己的资源空间的任务程序&lt;/p&gt;
&lt;p&gt;进程包括运行中的程序和程序所使用到的内存和系统资源&lt;/p&gt;
&lt;p&gt;CPU可以有很多进程，我们的电脑每打开一个软件就会产生一个或多个进程，为什么电脑运行的软件多就会卡，是因为CPU给每个进程分配资源空间，但是一个CPU一共就那么多资源，分出去越多，越卡，每个进程之间是相互独立的，CPU在运行一个进程时，其他的进程处于非运行状态，CPU使用 时间片轮转调度算法 来实现同时运行多个进程&lt;/p&gt;
&lt;h3 id=&#34;什么是线程&#34;&gt;&lt;a href=&#34;#什么是线程&#34; class=&#34;headerlink&#34; title=&#34;什么是线程&#34;&gt;&lt;/a&gt;什么是线程&lt;/h3&gt;&lt;p&gt;线程是CPU调度的最小单位&lt;/p&gt;
&lt;p&gt;线程是建立在进程的基础上的一次程序运行单位，通俗点解释线程就是程序中的一个执行流，一个进程可以有多个线程&lt;/p&gt;
&lt;p&gt;一个进程中只有一个执行流称作单线程，即程序执行时，所走的程序路径按照连续顺序排下来，前面的必须处理好，后面的才会执行&lt;/p&gt;
&lt;p&gt;一个进程中有多个执行流称作多线程，即在一个程序中可以同时运行多个不同的线程来执行不同的任务， 也就是说允许单个程序创建多个并行执行的线程来完成各自的任务&lt;/p&gt;
&lt;h3 id=&#34;进程和线程的区别&#34;&gt;&lt;a href=&#34;#进程和线程的区别&#34; class=&#34;headerlink&#34; title=&#34;进程和线程的区别&#34;&gt;&lt;/a&gt;进程和线程的区别&lt;/h3&gt;&lt;p&gt;进程是操作系统分配资源的最小单位，线程是程序执行的最小单位&lt;/p&gt;
&lt;p&gt;一个进程由一个或多个线程组成，线程可以理解为是一个进程中代码的不同执行路线&lt;/p&gt;
&lt;p&gt;进程之间相互独立，但同一进程下的各个线程间共享程序的内存空间(包括代码段、数据集、堆等)及一些进程级的资源(如打开文件和信号)&lt;/p&gt;
&lt;p&gt;调度和切换：线程上下文切换比进程上下文切换要快得多&lt;/p&gt;
&lt;h3 id=&#34;多进程和多线程&#34;&gt;&lt;a href=&#34;#多进程和多线程&#34; class=&#34;headerlink&#34; title=&#34;多进程和多线程&#34;&gt;&lt;/a&gt;多进程和多线程&lt;/h3&gt;&lt;p&gt;多进程：多进程指的是在同一个时间里，同一个计算机系统中如果允许两个或两个以上的进程处于运行状态。多进程带来的好处是明显的，比如大家可以在网易云听歌的同时打开编辑器敲代码，编辑器和网易云的进程之间不会相互干扰&lt;/p&gt;
&lt;p&gt;多线程：多线程是指程序中包含多个执行流，即在一个程序中可以同时运行多个不同的线程来执行不同的任务，也就是说允许单个程序创建多个并行执行的线程来完成各自的任务&lt;/p&gt;
&lt;h3 id=&#34;JS为什么是单线程&#34;&gt;&lt;a href=&#34;#JS为什么是单线程&#34; class=&#34;headerlink&#34; title=&#34;JS为什么是单线程&#34;&gt;&lt;/a&gt;JS为什么是单线程&lt;/h3&gt;&lt;p&gt;JS的单线程，与它的用途有关。作为浏览器脚本语言，JavaScript的主要用途是与用户互动，以及操作DOM。这决定了它只能是单线程，否则会带来很复杂的同步问题。比如，假定JavaScript同时有两个线程，一个线程在某个DOM节点上添加内容，另一个线程删除了这个节点，这时浏览器应该以哪个线程为准？&lt;/p&gt;
&lt;p&gt;还有人说js还有Worker线程，对的，为了利用多核CPU的计算能力，HTML5提出Web Worker标准，允许JavaScript脚本创建多个线程，但是子线程是完 全受主线程控制的，而且不得操作DOM&lt;/p&gt;
&lt;p&gt;所以，这个标准并没有改变JavaScript是单线程的本质&lt;/p&gt;
&lt;p&gt;了解了进程和线程之后，接下来看看浏览器解析，浏览器之间也是有些许差距的，不过大致是差不多的，下文我们皆用市场占有比例最大的Chrome为例&lt;/p&gt;
&lt;h2 id=&#34;浏览器&#34;&gt;&lt;a href=&#34;#浏览器&#34; class=&#34;headerlink&#34; title=&#34;浏览器&#34;&gt;&lt;/a&gt;浏览器&lt;/h2&gt;&lt;h3 id=&#34;浏览器是多进程的&#34;&gt;&lt;a href=&#34;#浏览器是多进程的&#34; class=&#34;headerlink&#34; title=&#34;浏览器是多进程的&#34;&gt;&lt;/a&gt;浏览器是多进程的&lt;/h3&gt;&lt;p&gt;作为前端，免不了和浏览器打交道，浏览器是多进程的，拿Chrome来说，我们每打开一个Tab页就会产生一个进程，我们使用Chrome打开很多标签页不关，电脑会越来越卡，不说其他，首先就很耗CPU&lt;/p&gt;
&lt;h3 id=&#34;浏览器包含哪些进程&#34;&gt;&lt;a href=&#34;#浏览器包含哪些进程&#34; class=&#34;headerlink&#34; title=&#34;浏览器包含哪些进程&#34;&gt;&lt;/a&gt;浏览器包含哪些进程&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;Browser进程 浏览器的主进程(负责协调、主控)，该进程只有一个 负责浏览器界面显示，与用户交互。如前进，后退等 负责各个页面的管理，创建和销毁其他进程 将渲染(Renderer)进程得到的内存中的Bitmap(位图)，绘制到用户界面上 网络资源的管理，下载等&lt;/li&gt;
&lt;li&gt;第三方插件进程 每种类型的插件对应一个进程，当使用该插件时才创建&lt;/li&gt;
&lt;li&gt;GPU进程 该进程也只有一个，用于3D绘制等等&lt;/li&gt;
&lt;li&gt;渲染进程(重) 即通常所说的浏览器内核(Renderer进程，内部是多线程) 每个Tab页面都有一个渲染进程，互不影响 主要作用为页面渲染，脚本执行，事件处理等&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;为什么浏览器要多进程&#34;&gt;&lt;a href=&#34;#为什么浏览器要多进程&#34; class=&#34;headerlink&#34; title=&#34;为什么浏览器要多进程&#34;&gt;&lt;/a&gt;为什么浏览器要多进程&lt;/h3&gt;&lt;p&gt;我们假设浏览器是单进程，那么某个Tab页崩溃了，就影响了整个浏览器，体验有多差&lt;/p&gt;
&lt;p&gt;同理如果插件崩溃了也会影响整个浏览器&lt;/p&gt;
&lt;p&gt;当然多进程还有其它的诸多优势，不过多阐述&lt;/p&gt;
&lt;p&gt;浏览器进程有很多，每个进程又有很多线程，都会占用内存&lt;/p&gt;
&lt;p&gt;这也意味着内存等资源消耗会很大，有点拿空间换时间的意思&lt;/p&gt;
&lt;p&gt;到此可不只是为了让我们理解为何Chrome运行时间长了电脑会卡，哈哈，第一个重点来了&lt;/p&gt;
&lt;h3 id=&#34;简述渲染进程Renderer-重&#34;&gt;&lt;a href=&#34;#简述渲染进程Renderer-重&#34; class=&#34;headerlink&#34; title=&#34;简述渲染进程Renderer(重)&#34;&gt;&lt;/a&gt;简述渲染进程Renderer(重)&lt;/h3&gt;&lt;p&gt;页面的渲染，JS的执行，事件的循环，都在渲染进程内执行，所以我们要重点了解渲染进程&lt;/p&gt;
&lt;p&gt;渲染进程是多线程的，我们来看渲染进程的一些常用较为主要的线程&lt;br&gt;渲染进程Renderer的主要线程&lt;/p&gt;
&lt;h3 id=&#34;GUI渲染线程&#34;&gt;&lt;a href=&#34;#GUI渲染线程&#34; class=&#34;headerlink&#34; title=&#34;GUI渲染线程&#34;&gt;&lt;/a&gt;GUI渲染线程&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;负责渲染浏览器界面，解析HTML，CSS，构建DOM树和RenderObject树，布局和绘制等 解析html代码(HTML代码本质是字符串)转化为浏览器认识的节点，生成DOM树，也就是DOM Tree 解析css，生成CSSOM(CSS规则树) 把DOM Tree 和CSSOM结合，生成Rendering Tree(渲染树)&lt;/li&gt;
&lt;li&gt;当我们修改了一些元素的颜色或者背景色，页面就会重绘(Repaint)&lt;/li&gt;
&lt;li&gt;当我们修改元素的尺寸，页面就会回流(Reflow)&lt;/li&gt;
&lt;li&gt;当页面需要Repaing和Reflow时GUI线程执行，绘制页面&lt;/li&gt;
&lt;li&gt;回流(Reflow)比重绘(Repaint)的成本要高，我们要尽量避免Reflow和Repaint&lt;/li&gt;
&lt;li&gt;GUI渲染线程与JS引擎线程是互斥的 当JS引擎执行时GUI线程会被挂起(相当于被冻结了) GUI更新会被保存在一个队列中等到JS引擎空闲时立即被执行&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;JS引擎线程&#34;&gt;&lt;a href=&#34;#JS引擎线程&#34; class=&#34;headerlink&#34; title=&#34;JS引擎线程&#34;&gt;&lt;/a&gt;JS引擎线程&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;JS引擎线程就是JS内核，负责处理Javascript脚本程序(例如V8引擎)&lt;/li&gt;
&lt;li&gt;JS引擎线程负责解析Javascript脚本，运行代码&lt;/li&gt;
&lt;li&gt;JS引擎一直等待着任务队列中任务的到来，然后加以处理 浏览器同时只能有一个JS引擎线程在运行JS程序，所以js是单线程运行的 一个Tab页(renderer进程)中无论什么时候都只有一个JS线程在运行JS程序&lt;/li&gt;
&lt;li&gt;GUI渲染线程与JS引擎线程是互斥的，js引擎线程会阻塞GUI渲染线程 就是我们常遇到的JS执行时间过长，造成页面的渲染不连贯，导致页面渲染加载阻塞(就是加载慢) 例如浏览器渲染的时候遇到&lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt;标签，就会停止GUI的渲染，然后js引擎线程开始工作，执行里面的js代码，等js执行完毕，js引擎线程停止工作，GUI继续渲染下面的内容。所以如果js执行时间太长就会造成页面卡顿的情况&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;事件触发线程&#34;&gt;&lt;a href=&#34;#事件触发线程&#34; class=&#34;headerlink&#34; title=&#34;事件触发线程&#34;&gt;&lt;/a&gt;事件触发线程&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;属于浏览器而不是JS引擎，用来控制事件循环，并且管理着一个事件队列(task queue)&lt;/li&gt;
&lt;li&gt;当js执行碰到事件绑定和一些异步操作(如setTimeOut，也可来自浏览器内核的其他线程，如鼠标点击、AJAX异步请求等)，会走事件触发线程将对应的事件添加到对应的线程中(比如定时器操作，便把定时器事件添加到定时器线程)，等异步事件有了结果，便把他们的回调操作添加到事件队列，等待js引擎线程空闲时来处理。&lt;/li&gt;
&lt;li&gt;当对应的事件符合触发条件被触发时，该线程会把事件添加到待处理队列的队尾，等待JS引擎的处理&lt;/li&gt;
&lt;li&gt;因为JS是单线程，所以这些待处理队列中的事件都得排队等待JS引擎处理&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;定时触发器线程&#34;&gt;&lt;a href=&#34;#定时触发器线程&#34; class=&#34;headerlink&#34; title=&#34;定时触发器线程&#34;&gt;&lt;/a&gt;定时触发器线程&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;setInterval与setTimeout所在线程&lt;/li&gt;
&lt;li&gt;浏览器定时计数器并不是由JavaScript引擎计数的(因为JavaScript引擎是单线程的，如果处于阻塞线程状态就会影响记计时的准确)&lt;/li&gt;
&lt;li&gt;通过单独线程来计时并触发定时(计时完毕后，添加到事件触发线程的事件队列中，等待JS引擎空闲后执行)，这个线程就是定时触发器线程，也叫定时器线程&lt;/li&gt;
&lt;li&gt;W3C在HTML标准中规定，规定要求setTimeout中低于4ms的时间间隔算为4ms&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;异步http请求线程&#34;&gt;&lt;a href=&#34;#异步http请求线程&#34; class=&#34;headerlink&#34; title=&#34;异步http请求线程&#34;&gt;&lt;/a&gt;异步http请求线程&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;在XMLHttpRequest在连接后是通过浏览器新开一个线程请求&lt;/li&gt;
&lt;li&gt;将检测到状态变更时，如果设置有回调函数，异步线程就产生状态变更事件，将这个回调再放入事件队列中再由JavaScript引擎执行&lt;/li&gt;
&lt;li&gt;简单说就是当执行到一个http异步请求时，就把异步请求事件添加到异步请求线程，等收到响应(准确来说应该是http状态变化)，再把回调函数添加到事件队列，等待js引擎线程来执行&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;了解了上面这些基础后，接下来我们开始进入今天的正题&lt;/p&gt;
&lt;h3 id=&#34;事件循环-Event-Loop-初探&#34;&gt;&lt;a href=&#34;#事件循环-Event-Loop-初探&#34; class=&#34;headerlink&#34; title=&#34;事件循环(Event Loop)初探&#34;&gt;&lt;/a&gt;事件循环(Event Loop)初探&lt;/h3&gt;&lt;p&gt;首先要知道，JS分为同步任务和异步任务&lt;/p&gt;
&lt;p&gt;同步任务都在主线程(这里的主线程就是JS引擎线程)上执行，会形成一个执行栈&lt;/p&gt;
&lt;p&gt;主线程之外，事件触发线程管理着一个任务队列，只要异步任务有了运行结果，就在任务队列之中放一个事件回调&lt;/p&gt;
&lt;p&gt;一旦执行栈中的所有同步任务执行完毕(也就是JS引擎线程空闲了)，系统就会读取任务队列，将可运行的异步任务(任务队列中的事件回调，只要任务队列中有事件回调，就说明可以执行)添加到执行栈中，开始执行&lt;/p&gt;
&lt;p&gt;我们来看一段简单的代码&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; setTimeoutCallBack = &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;string&#34;&gt;&amp;#x27;我是定时器回调&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; httpCallback = &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;string&#34;&gt;&amp;#x27;我是http请求回调&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;string&#34;&gt;&amp;#x27;我是同步任务1&amp;#x27;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 同步任务/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(setTimeoutCallBack,&lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 异步定时任务/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * 异步http请求任务&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; * ajax.get(&amp;#x27;/info&amp;#x27;,httpCallback);	//无此环境&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt; */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;string&#34;&gt;&amp;#x27;我是同步任务2&amp;#x27;&lt;/span&gt;); &lt;span class=&#34;comment&#34;&gt;// 同步任务/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上述代码执行过程&lt;/p&gt;
&lt;p&gt;JS是按照顺序从上往下依次执行的，可以先理解为这段代码时的执行环境就是主线程，也就是也就是当前执行栈&lt;/p&gt;
&lt;p&gt;首先，执行console.log(‘我是同步任务1’)&lt;/p&gt;
&lt;p&gt;接着，执行到setTimeout时，会移交给定时器线程，通知定时器线程 1s 后将 setTimeoutCallBack 这个回调交给事件触发线程处理，在 1s 后事件触发线程会收到 setTimeoutCallBack 这个回调并把它加入到事件触发线程所管理的事件队列中等待执行&lt;/p&gt;
&lt;p&gt;接着，执行http请求，会移交给异步http请求线程发送网络请求，请求成功后将 httpCallback 这个回调交由事件触发线程处理，事件触发线程收到 httpCallback 这个回调后把它加入到事件触发线程所管理的事件队列中等待执行&lt;/p&gt;
&lt;p&gt;再接着执行console.log(‘我是同步任务2’)&lt;/p&gt;
&lt;p&gt;至此主线程执行栈中执行完毕，JS引擎线程已经空闲，开始向事件触发线程发起询问，询问事件触发线程的事件队列中是否有需要执行的回调函数，如果有将事件队列中的回调事件加入执行栈中，开始执行回调，如果事件队列中没有回调，JS引擎线程会一直发起询问，直到有为止&lt;/p&gt;
&lt;p&gt;到了这里我们发现，浏览器上的所有线程的工作都很单一且独立，非常符合单一原则&lt;/p&gt;
&lt;p&gt;定时触发线程只管理定时器且只关注定时不关心结果，定时结束就把回调扔给事件触发线程&lt;/p&gt;
&lt;p&gt;异步http请求线程只管理http请求同样不关心结果，请求结束把回调扔给事件触发线程&lt;/p&gt;
&lt;p&gt;事件触发线程只关心异步回调入事件队列&lt;/p&gt;
&lt;p&gt;而我们JS引擎线程只会执行执行栈中的事件，执行栈中的代码执行完毕，就会读取事件队列中的事件并添加到执行栈中继续执行，这样反反复复就是我们所谓的&lt;strong&gt;事件循环(Event Loop)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;图解&lt;/strong&gt;&lt;/p&gt;
&lt;picture&gt;
&lt;source srcset=&#34;https://cdn.jsdelivr.net/gh/qinxs/cdn-assets/img/md/9c28944f/Event-Loop1.webp&#34; type=&#34;image/webp&#34;&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/qinxs/cdn-assets/img/md/9c28944f/Event-Loop1.jpg&#34; /&gt;
&lt;/picture&gt;


&lt;p&gt;首先，执行栈开始顺序执行&lt;/p&gt;
&lt;p&gt;判断是否为同步，异步则进入异步线程，最终事件回调给事件触发线程的任务队列等待执行，同步继续执行&lt;/p&gt;
&lt;p&gt;执行栈空，询问任务队列中是否有事件回调&lt;/p&gt;
&lt;p&gt;任务队列中有事件回调则把回调加入执行栈末尾继续从第一步开始执行&lt;/p&gt;
&lt;p&gt;任务队列中没有事件回调则不停发起询问&lt;/p&gt;
&lt;h2 id=&#34;宏任务-macrotask-amp-微任务-microtask&#34;&gt;&lt;a href=&#34;#宏任务-macrotask-amp-微任务-microtask&#34; class=&#34;headerlink&#34; title=&#34;宏任务(macrotask) &amp;amp; 微任务(microtask)&#34;&gt;&lt;/a&gt;宏任务(macrotask) &amp;amp; 微任务(microtask)&lt;/h2&gt;&lt;h3 id=&#34;宏任务-macrotask&#34;&gt;&lt;a href=&#34;#宏任务-macrotask&#34; class=&#34;headerlink&#34; title=&#34;宏任务(macrotask)&#34;&gt;&lt;/a&gt;宏任务(macrotask)&lt;/h3&gt;&lt;p&gt;在ECMAScript中，macrotask也被称为task&lt;/p&gt;
&lt;p&gt;我们可以将每次执行栈执行的代码当做是一个宏任务(包括每次从事件队列中获取一个事件回调并放到执行栈中执行)， 每一个宏任务会从头到尾执行完毕，不会执行其他&lt;/p&gt;
&lt;p&gt;由于JS引擎线程和GUI渲染线程是互斥的关系，浏览器为了能够使宏任务和DOM任务有序的进行，会在一个宏任务执行结果后，在下一个宏任务执行前，GUI渲染线程开始工作，对页面进行渲染&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;宏任务 -&amp;gt; GUI渲染 -&amp;gt; 宏任务 -&amp;gt; …&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;常见的宏任务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;主代码块&lt;/li&gt;
&lt;li&gt;setTimeout&lt;/li&gt;
&lt;li&gt;setInterval&lt;/li&gt;
&lt;li&gt;setImmediate ()-Node&lt;/li&gt;
&lt;li&gt;requestAnimationFrame ()-浏览器&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;微任务-microtask&#34;&gt;&lt;a href=&#34;#微任务-microtask&#34; class=&#34;headerlink&#34; title=&#34;微任务(microtask)&#34;&gt;&lt;/a&gt;微任务(microtask)&lt;/h3&gt;&lt;p&gt;ES6新引入了Promise标准，同时浏览器实现上多了一个microtask微任务概念，在ECMAScript中，microtask也被称为jobs&lt;/p&gt;
&lt;p&gt;我们已经知道宏任务结束后，会执行渲染，然后执行下一个宏任务， 而微任务可以理解成在当前宏任务执行后立即执行的任务&lt;/p&gt;
&lt;p&gt;当一个宏任务执行完，会在渲染前，将执行期间所产生的所有微任务都执行完&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;宏任务 -&amp;gt; 微任务 -&amp;gt; GUI渲染 -&amp;gt; 宏任务 -&amp;gt; …&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;常见微任务&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;process.nextTick ()-Node&lt;/li&gt;
&lt;li&gt;Promise.then()&lt;/li&gt;
&lt;li&gt;catch&lt;/li&gt;
&lt;li&gt;finally&lt;/li&gt;
&lt;li&gt;Object.observe&lt;/li&gt;
&lt;li&gt;MutationObserver&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;简单区分宏任务与微任务&#34;&gt;&lt;a href=&#34;#简单区分宏任务与微任务&#34; class=&#34;headerlink&#34; title=&#34;简单区分宏任务与微任务&#34;&gt;&lt;/a&gt;简单区分宏任务与微任务&lt;/h3&gt;&lt;p&gt;看了上述宏任务微任务的解释你可能还不太清楚，没关系，往下看，先记住那些常见的宏微任务即可&lt;/p&gt;
&lt;p&gt;我们通过几个例子来看，这几个例子思路来自掘金云中君的文章参考链接&lt;del&gt;【14】&lt;/del&gt;，通过渲染背景颜色来区分宏任务和微任务，很直观，我觉得很有意思，所以这里也用这种例子&lt;/p&gt;
&lt;p&gt;找一个空白的页面，在console中输入以下代码&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.body.style = &lt;span class=&#34;string&#34;&gt;&amp;#x27;background:black&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.body.style = &lt;span class=&#34;string&#34;&gt;&amp;#x27;background:red&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.body.style = &lt;span class=&#34;string&#34;&gt;&amp;#x27;background:blue&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.body.style = &lt;span class=&#34;string&#34;&gt;&amp;#x27;background:pink&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/qinxs/cdn-assets/img/md/9c28944f/test1.gif&#34; alt=&#34;test1&#34; title=&#34;test1&#34;&gt;&lt;/p&gt;
&lt;p&gt;我们看到上面动图背景直接渲染了粉红色，根据上文里讲浏览器会先执行完一个宏任务，再执行当前执行栈的所有微任务，然后移交GUI渲染，上面四行代码均属于同一次宏任务，全部执行完才会执行渲染，渲染时GUI线程会将所有UI改动优化合并，所以视觉上，只会看到页面变成粉红色&lt;/p&gt;
&lt;p&gt;再接着看&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.body.style = &lt;span class=&#34;string&#34;&gt;&amp;#x27;background:blue&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;()=&amp;gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.body.style = &lt;span class=&#34;string&#34;&gt;&amp;#x27;background:black&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;,&lt;span class=&#34;number&#34;&gt;200&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/qinxs/cdn-assets/img/md/9c28944f/test2.gif&#34; alt=&#34;test2&#34; title=&#34;test2&#34;&gt;&lt;/p&gt;
&lt;p&gt;上述代码中，页面会先卡一下蓝色，再变成黑色背景，页面上写的是200毫秒，大家可以把它当成0毫秒，因为0毫秒的话由于浏览器渲染太快，录屏不好捕捉，我又没啥录屏慢放的工具，大家可以自行测试的，结果也是一样，最安全的方法是写一个index.html文件，在这个文件中插入上面的js脚本，然后浏览器打开，谷歌下使用控制台中performance功能查看一帧一帧的加载最为恰当，不过这样录屏不好录所以。。。&lt;/p&gt;
&lt;p&gt;回归正题，之所以会卡一下蓝色，是因为以上代码属于两次宏任务，第一次宏任务执行的代码是将背景变成蓝色，然后触发渲染，将页面变成蓝色，再触发第二次宏任务将背景变成黑色&lt;/p&gt;
&lt;p&gt;再来看&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.body.style = &lt;span class=&#34;string&#34;&gt;&amp;#x27;background:blue&amp;#x27;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;Promise&lt;/span&gt;.resolve().then(&lt;span class=&#34;function&#34;&gt;()=&amp;gt;&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.body.style = &lt;span class=&#34;string&#34;&gt;&amp;#x27;background:pink&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/qinxs/cdn-assets/img/md/9c28944f/test3.gif&#34; alt=&#34;test3&#34;&gt;&lt;/p&gt;
&lt;p&gt;控制台输出 1 3 2 , 是因为 promise 对象的 then 方法的回调函数是异步执行，所以 2 最后输出&lt;/p&gt;
&lt;p&gt;页面的背景色直接变成粉色，没有经过蓝色的阶段，是因为，我们在宏任务中将背景设置为蓝色，但在进行渲染前执行了微任务， 在微任务中将背景变成了粉色，然后才执行的渲染&lt;/p&gt;
&lt;h3 id=&#34;微任务宏任务注意点&#34;&gt;&lt;a href=&#34;#微任务宏任务注意点&#34; class=&#34;headerlink&#34; title=&#34;微任务宏任务注意点&#34;&gt;&lt;/a&gt;微任务宏任务注意点&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;浏览器会先执行一个宏任务，紧接着执行当前执行栈产生的微任务，再进行渲染，然后再执行下一个宏任务&lt;/li&gt;
&lt;li&gt;微任务和宏任务不在一个任务队列，不在一个任务队列 例如setTimeout是一个宏任务，它的事件回调在宏任务队列，Promise.then()是一个微任务，它的事件回调在微任务队列，二者并不是一个任务队列 以Chrome 为例，有关渲染的都是在渲染进程中执行，渲染进程中的任务（DOM树构建，js解析…等等）需要主线程执行的任务都会在主线程中执行，而浏览器维护了一套事件循环机制，主线程上的任务都会放到消息队列中执行，主线程会循环消息队列，并从头部取出任务进行执行，如果执行过程中产生其他任务需要主线程执行的，渲染进程中的其他线程会把该任务塞入到消息队列的尾部，消息队列中的任务都是宏任务 微任务是如何产生的呢？当执行到script脚本的时候，js引擎会为全局创建一个执行上下文，在该执行上下文中维护了一个微任务队列，当遇到微任务，就会把微任务回调放在微队列中，当所有的js代码执行完毕，在退出全局上下文之前引擎会去检查该队列，有回调就执行，没有就退出执行上下文，这也就是为什么微任务要早于宏任务，也是大家常说的，每个宏任务都有一个微任务队列（由于定时器是浏览器的API，所以定时器是宏任务，在js中遇到定时器会也是放入到浏览器的队列中）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;此时，你可能还很迷惑，没关系，请接着往下看&lt;/p&gt;
&lt;h3 id=&#34;图解宏任务和微任务&#34;&gt;&lt;a href=&#34;#图解宏任务和微任务&#34; class=&#34;headerlink&#34; title=&#34;图解宏任务和微任务&#34;&gt;&lt;/a&gt;图解宏任务和微任务&lt;/h3&gt;&lt;picture&gt;
&lt;source srcset=&#34;https://cdn.jsdelivr.net/gh/qinxs/cdn-assets/img/md/9c28944f/Event-Loop2.webp&#34; type=&#34;image/webp&#34;&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/qinxs/cdn-assets/img/md/9c28944f/Event-Loop2.jpg&#34; /&gt;
&lt;/picture&gt;

&lt;p&gt;首先执行一个宏任务，执行结束后判断是否存在微任务&lt;/p&gt;
&lt;p&gt;有微任务先执行所有的微任务，再渲染，没有微任务则直接渲染&lt;/p&gt;
&lt;p&gt;然后再接着执行下一个宏任务&lt;/p&gt;
&lt;h3 id=&#34;图解完整的Event-Loop&#34;&gt;&lt;a href=&#34;#图解完整的Event-Loop&#34; class=&#34;headerlink&#34; title=&#34;图解完整的Event Loop&#34;&gt;&lt;/a&gt;图解完整的Event Loop&lt;/h3&gt;&lt;picture&gt;
&lt;source srcset=&#34;https://cdn.jsdelivr.net/gh/qinxs/cdn-assets/img/md/9c28944f/Event-Loop_wz.webp&#34; type=&#34;image/webp&#34;&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/qinxs/cdn-assets/img/md/9c28944f/Event-Loop_wz.jpg&#34; /&gt;
&lt;/picture&gt;

&lt;p&gt;首先，整体的script(作为第一个宏任务)开始执行的时候，会把所有代码分为同步任务、异步任务两部分&lt;/p&gt;
&lt;p&gt;同步任务会直接进入主线程依次执行&lt;/p&gt;
&lt;p&gt;异步任务会再分为宏任务和微任务&lt;/p&gt;
&lt;p&gt;宏任务进入到Event Table中，并在里面注册回调函数，每当指定的事件完成时，Event Table会将这个函数移到Event Queue中&lt;/p&gt;
&lt;p&gt;微任务也会进入到另一个Event Table中，并在里面注册回调函数，每当指定的事件完成时，Event Table会将这个函数移到Event Queue中&lt;/p&gt;
&lt;p&gt;当主线程内的任务执行完毕，主线程为空时，会检查微任务的Event Queue，如果有任务，就全部执行，如果没有就执行下一个宏任务&lt;/p&gt;
&lt;p&gt;上述过程会不断重复，这就是Event Loop，比较完整的事件循环&lt;/p&gt;
&lt;h3 id=&#34;关于Promise&#34;&gt;&lt;a href=&#34;#关于Promise&#34; class=&#34;headerlink&#34; title=&#34;关于Promise&#34;&gt;&lt;/a&gt;关于Promise&lt;/h3&gt;&lt;p&gt;new Promise(() =&amp;gt; {}).then() ，我们来看这样一个Promise代码&lt;/p&gt;
&lt;p&gt;前面的 new Promise() 这一部分是一个构造函数，这是一个同步任务&lt;/p&gt;
&lt;p&gt;后面的 .then() 才是一个异步微任务，这一点是非常重要的&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Promise&lt;/span&gt;((resolve) = &amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	resolve()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;).then(() = &amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上面代码输出1 3 2&lt;/p&gt;
&lt;h3 id=&#34;关于-async-await-函数&#34;&gt;&lt;a href=&#34;#关于-async-await-函数&#34; class=&#34;headerlink&#34; title=&#34;关于 async/await 函数&#34;&gt;&lt;/a&gt;关于 async/await 函数&lt;/h3&gt;&lt;p&gt;async/await本质上还是基于Promise的一些封装，而Promise是属于微任务的一种&lt;/p&gt;
&lt;p&gt;所以在使用await关键字与Promise.then效果类似&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;))&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;test&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;	&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;keyword&#34;&gt;await&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Promise&lt;/span&gt;.resolve()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test()&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;上述代码输出1 2 3 4&lt;/p&gt;
&lt;p&gt;可以理解为，await 以前的代码，相当于与 new Promise 的同步代码，await 以后的代码相当于 Promise.then的异步&lt;/p&gt;
&lt;h3 id=&#34;举栗印证&#34;&gt;&lt;a href=&#34;#举栗印证&#34; class=&#34;headerlink&#34; title=&#34;举栗印证&#34;&gt;&lt;/a&gt;举栗印证&lt;/h3&gt;&lt;p&gt;首先给大家来一个比较直观的动图&lt;br&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/qinxs/cdn-assets/img/md/9c28944f/lizi.gif&#34; title=&#34;lizi&#34;&gt;&lt;/p&gt;
&lt;p&gt;之所以放这个动图，就是为了向大家推荐这篇好文，动图录屏自参考链接【1】&lt;/p&gt;
&lt;p&gt;极力推荐大家看看这篇帖子，非常nice，分步动画生动且直观，有时间的话可以自己去体验下&lt;/p&gt;
&lt;p&gt;不过在看这个帖子之前你要先了解下运行机制会更好读懂些&lt;/p&gt;
&lt;p&gt;接下来这个来自网上随意找的一个比较简单的面试题，求输出结果&lt;/p&gt;
&lt;figure class=&#34;highlight js&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; &lt;span class=&#34;title&#34;&gt;test&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;  &lt;span class=&#34;comment&#34;&gt;// timer1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;, &lt;span class=&#34;number&#34;&gt;1000&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;test();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;    &lt;span class=&#34;comment&#34;&gt;// timer2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;3&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;new&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;Promise&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;resolve&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;4&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;  &lt;span class=&#34;comment&#34;&gt;// timer3&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;5&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;, &lt;span class=&#34;number&#34;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    resolve()&amp;#125;).then(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt; (&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;  &lt;span class=&#34;comment&#34;&gt;// timer4&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;6&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;, &lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;7&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;built_in&#34;&gt;console&lt;/span&gt;.log(&lt;span class=&#34;number&#34;&gt;8&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;


&lt;p&gt;结合我们上述的JS运行机制再来看这道题就简单明了的多了&lt;/p&gt;
&lt;p&gt;JS是顺序从上而下执行&lt;/p&gt;
&lt;p&gt;执行到test()，test方法为同步，直接执行，console.log(1)打印1&lt;/p&gt;
&lt;p&gt;test方法中setTimeout为异步宏任务，回调我们把它记做timer1放入宏任务队列&lt;/p&gt;
&lt;p&gt;接着执行，test方法下面有一个setTimeout为异步宏任务，回调我们把它记做timer2放入宏任务队列&lt;/p&gt;
&lt;p&gt;接着执行promise，new Promise是同步任务，直接执行，打印4&lt;/p&gt;
&lt;p&gt;new Promise里面的setTimeout是异步宏任务，回调我们记做timer3放到宏任务队列&lt;/p&gt;
&lt;p&gt;Promise.then是微任务，放到微任务队列&lt;/p&gt;
&lt;p&gt;console.log(8)是同步任务，直接执行，打印8&lt;/p&gt;
&lt;p&gt;主线程任务执行完毕，检查微任务队列中有Promise.then&lt;/p&gt;
&lt;p&gt;开始执行微任务，发现有setTimeout是异步宏任务，记做timer4放到宏任务队列&lt;/p&gt;
&lt;p&gt;微任务队列中的console.log(7)是同步任务，直接执行，打印7&lt;/p&gt;
&lt;p&gt;微任务执行完毕，第一次循环结束&lt;/p&gt;
&lt;p&gt;检查宏任务队列，里面有timer1、timer2、timer3、timer4，四个定时器宏任务，按照定时器延迟时间得到可以执行的顺序，即Event Queue：timer2、timer4、timer3、timer1，依次拿出放入执行栈末尾执行 (插播一条：浏览器 event loop 的 Macrotask queue，就是宏任务队列在每次循环中只会读取一个任务)&lt;/p&gt;
&lt;p&gt;执行timer2，console.log(3)为同步任务，直接执行，打印3&lt;/p&gt;
&lt;p&gt;检查没有微任务，第二次结束&lt;/p&gt;
&lt;p&gt;执行timer4，console.log(6)为同步任务，直接执行，打印6&lt;/p&gt;
&lt;p&gt;检查没有微任务，第三次Event Loop结束&lt;/p&gt;
&lt;p&gt;执行timer3，console.log(5)同步任务，直接执行，打印5&lt;/p&gt;
&lt;p&gt;检查没有微任务，第四次Event Loop结束&lt;/p&gt;
&lt;p&gt;执行timer1，console.log(2)同步任务，直接执行，打印2&lt;/p&gt;
&lt;p&gt;检查没有微任务，也没有宏任务，第五次Event Loop结束&lt;/p&gt;
&lt;p&gt;结果：1，4，8，7，3，6，5，2&lt;/p&gt;
&lt;h2 id=&#34;提一下NodeJS中的运行机制&#34;&gt;&lt;a href=&#34;#提一下NodeJS中的运行机制&#34; class=&#34;headerlink&#34; title=&#34;提一下NodeJS中的运行机制&#34;&gt;&lt;/a&gt;提一下NodeJS中的运行机制&lt;/h2&gt;&lt;p&gt;上面的一切都是针对于浏览器的EventLoop&lt;/p&gt;
&lt;p&gt;虽然NodeJS中的JavaScript运行环境也是V8，也是单线程，但是，还是有一些与浏览器中的表现是不一样的&lt;/p&gt;
&lt;p&gt;其实nodejs与浏览器的区别，就是nodejs的宏任务分好几种类型，而这好几种又有不同的任务队列，而不同的任务队列又有顺序区别，而微任务是穿插在每一种宏任务之间的&lt;/p&gt;
&lt;p&gt;在node环境下，process.nextTick的优先级高于Promise，可以简单理解为在宏任务结束后会先执行微任务队列中的nextTickQueue部分，然后才会执行微任务中的Promise部分&lt;/p&gt;
&lt;picture&gt;
&lt;source srcset=&#34;https://cdn.jsdelivr.net/gh/qinxs/cdn-assets/img/md/9c28944f/nodejs.webp&#34; type=&#34;image/webp&#34;&gt;
&lt;img src=&#34;https://cdn.jsdelivr.net/gh/qinxs/cdn-assets/img/md/9c28944f/nodejs.jpg&#34; /&gt;
&lt;/picture&gt;

&lt;p&gt;上图来自NodeJS官网&lt;/p&gt;
&lt;p&gt;如上图所示，nodejs的宏任务分好几种类型，我们只简单介绍大体内容了解，不详细解释，不然又是啰哩啰嗦一大篇&lt;/p&gt;
&lt;p&gt;NodeJS的Event Loop相对比较麻烦&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Node会先执行所有类型为 timers 的 MacroTask，然后执行所有的 MicroTask(NextTick例外)&lt;br&gt;进入 poll 阶段，执行几乎所有 MacroTask，然后执行所有的 MicroTask再执行所有类型为 check 的 MacroTask，然后执行所有的 MicroTask&lt;br&gt;再执行所有类型为 close callbacks 的 MacroTask，然后执行所有的 MicroTask&lt;br&gt;至此，完成一个 Tick，回到 timers 阶段……如此反复，无穷无尽……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;反观浏览器中Event Loop就比较容易理解&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;先执行一个 MacroTask，然后执行所有的 MicroTask&lt;br&gt;再执行一个 MacroTask，然后执行所有的 MicroTask……如此反复，无穷无尽……&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;好了，关于Node中各个类型阶段的解析，这里就不过多说明了，自己查阅资料吧，这里就是简单提一下，NodeJS的Event Loop解释起来比浏览器这繁杂，这里就只做个对比&lt;/p&gt;
&lt;h2 id=&#34;最后&#34;&gt;&lt;a href=&#34;#最后&#34; class=&#34;headerlink&#34; title=&#34;最后&#34;&gt;&lt;/a&gt;最后&lt;/h2&gt;&lt;p&gt;本文转载自今日头条创作者&lt;a href=&#34;https://www.toutiao.com/c/user/50015307320/&#34;&gt;Echa攻城狮&lt;/a&gt;，感谢！&lt;/p&gt;
&lt;p&gt;原文链接： &lt;a href=&#34;https://www.toutiao.com/i6805366747240071693/&#34;&gt;「硬核JS」一次搞懂JS运行机制&lt;/a&gt;&lt;/p&gt;
</content>
        <category term="javascript" />
        <updated>2020-09-08T14:15:55.000Z</updated>
    </entry>
    <entry>
        <id>https://7bxing.com/posts/991130e/</id>
        <title>短网址生成</title>
        <link rel="alternate" href="https://7bxing.com/posts/991130e/"/>
        <content type="html">&lt;p&gt;基于 &lt;a href=&#34;https://suowo.cn/&#34;&gt;suowo.cn&lt;/a&gt; 官方API制作的 &lt;strong&gt;&lt;code&gt;短网址生成&lt;/code&gt;&lt;/strong&gt; 的小书签和快捷指令&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/qinxs/cdn-assets/img/md/991130e/xiaoshuqian.png&#34; alt=&#34;小书签版运行截图&#34;&gt;&lt;/p&gt;
&lt;a id=&#34;more&#34;&gt;&lt;/a&gt;

&lt;h2 id=&#34;安装说明&#34;&gt;&lt;a href=&#34;#安装说明&#34; class=&#34;headerlink&#34; title=&#34;安装说明&#34;&gt;&lt;/a&gt;安装说明&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;小书签: &lt;a href=&#34;https://www.runningcheese.com/bookmarklet&#34;&gt;教程说明&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;使用了ES6语法，不兼容IE浏览器&lt;br&gt;如果需要批量处理，请到官网处理（或采用其他工具, 推荐 &lt;a href=&#34;http://suo.im/5XOyoQ&#34;&gt;Short Url&lt;/a&gt;）&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;IOS捷径: &lt;a href=&#34;https://www.rcuts.com/382.html&#34;&gt;首次安装使用教程&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;强烈建议: 安装后申请个人的 &lt;a href=&#34;https://suowo.cn/&#34; title=&#34;前往申请&#34;&gt;key&lt;/a&gt; , 并进行手动替换&lt;/strong&gt;&lt;/p&gt;
&lt;details &gt;&lt;summary&gt; &lt;p&gt;小书签替换key&lt;/p&gt; &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
              &lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/qinxs/cdn-assets/img/md/991130e/tihuan_xsq_key.png&#34;&gt;&lt;/p&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;details &gt;&lt;summary&gt; &lt;p&gt;IOS捷径替换key&lt;/p&gt; &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
              &lt;p&gt;&lt;img src=&#34;https://cdn.jsdelivr.net/gh/qinxs/cdn-assets/img/md/991130e/tihuan_jj_key.png&#34;&gt;&lt;/p&gt;
              &lt;/div&gt;
            &lt;/details&gt;

&lt;h2 id=&#34;js小书签&#34;&gt;&lt;a href=&#34;#js小书签&#34; class=&#34;headerlink&#34; title=&#34;js小书签&#34;&gt;&lt;/a&gt;js小书签&lt;/h2&gt;&lt;details green&gt;&lt;summary&gt; &lt;p&gt;小书签代码&lt;/p&gt; &lt;/summary&gt;
              &lt;div class=&#39;content&#39;&gt;
              &lt;figure class=&#34;highlight javascript&#34;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&#34;gutter&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;68&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;69&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;70&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;71&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;72&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;73&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;74&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;75&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;76&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;77&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;78&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;79&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;80&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;81&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;82&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;83&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;84&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;85&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;86&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;87&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;88&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;89&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;90&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;91&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;92&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;93&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;94&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;95&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;96&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;97&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;98&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;99&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;100&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;101&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;102&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;103&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;104&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;105&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;106&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;107&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;108&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;109&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;110&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;111&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;112&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;113&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;114&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;115&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;116&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;117&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;118&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;119&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;120&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;121&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;122&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;123&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;124&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;125&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;126&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;127&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;128&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;129&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;130&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;131&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;132&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;133&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;134&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;135&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;136&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;137&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;138&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;139&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;140&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;141&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;142&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;143&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;144&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;145&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;146&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;147&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;148&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;149&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;150&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;151&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;152&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;153&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;154&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;155&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;156&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&#34;code&#34;&gt;&lt;pre&gt;&lt;span class=&#34;line&#34;&gt;javascript:(&lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;meta&#34;&gt;  &amp;#x27;use strict&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; suo_now = &lt;span class=&#34;literal&#34;&gt;true&lt;/span&gt;; &lt;span class=&#34;comment&#34;&gt;/*打开时直接压缩window.location.href*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; suo_api = &lt;span class=&#34;string&#34;&gt;&amp;#x27;https://suo.im/api.htm&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; suo_key = &lt;span class=&#34;string&#34;&gt;&amp;#x27;5f0729c5b1b63c45d0cb8173@ae63a2ad212f6e56088ab7814732c4c0&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;const&lt;/span&gt; dq = &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;css&lt;/span&gt; =&amp;gt;&lt;/span&gt; &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.querySelector(css);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; suoIm = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    show: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; content = &lt;span class=&#34;string&#34;&gt;&amp;#x27;也可以输入长网址：&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; css = &lt;span class=&#34;string&#34;&gt;`&amp;lt;style&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        body &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          line-height: 1.65;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        .dialog-container &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          position: fixed;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          top: 25px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          width: 40%;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          min-width:300px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          margin: 0 auto;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          border: 1px solid #ddd;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          border-radius: 4px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          background-color: #fff;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          z-index: 99999;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        .ctrlV-content &amp;#123;padding: 10px;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        .bm_btns &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          float: right;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          margin-right: 20px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          margin-bottom: 10px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        .long-url &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          display: block;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          width: 98%;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          margin-top: 10px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          padding-left: 0.3em;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          border: 1px solid #ddd;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          border-radius: 4px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          line-height: 28px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        .mybtn &amp;#123;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          width: 80px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          margin-right: 6px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          padding: 0 !important;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          border: none;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          border-radius: 10px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          background: #981a1a;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          color: #fff;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          font-size: 14px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;          line-height: 28px;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        .mybtn:hover &amp;#123;background-color: #0371df !important;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        #cancel &amp;#123;background: #2d2d2d;&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      &amp;lt;/style&amp;gt;`&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; html = &lt;span class=&#34;string&#34;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;lt;div class=&amp;#x27;dialog-container&amp;#x27;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;div class=&amp;#x27;ctrlV-content&amp;#x27;&amp;gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;content&amp;#125;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;                &amp;lt;input class=&amp;#x27;long-url&amp;#x27; value=&amp;#x27;&amp;#x27; placeholder=&amp;#x27;为空则默认为当前网址&amp;#x27;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;div class=&amp;#x27;bm_btns&amp;#x27;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;                &amp;lt;button id=&amp;#x27;operation&amp;#x27; class=&amp;#x27;mybtn&amp;#x27;&amp;gt;&lt;span class=&#34;subst&#34;&gt;$&amp;#123;suo_now?&lt;span class=&#34;string&#34;&gt;&amp;#x27;清空&amp;#x27;&lt;/span&gt;:&lt;span class=&#34;string&#34;&gt;&amp;#x27;生成&amp;#x27;&lt;/span&gt;&amp;#125;&lt;/span&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;                &amp;lt;button id=&amp;#x27;copy&amp;#x27; class=&amp;#x27;mybtn&amp;#x27;&amp;gt;复制&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;                &amp;lt;button id=&amp;#x27;cancel&amp;#x27; class=&amp;#x27;mybtn&amp;#x27;&amp;gt;取消&amp;lt;/button&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;            &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;        &amp;lt;/div&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;string&#34;&gt;      `&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      dq(&lt;span class=&#34;string&#34;&gt;&amp;#x27;head&amp;#x27;&lt;/span&gt;).insertAdjacentHTML(&lt;span class=&#34;string&#34;&gt;&amp;#x27;beforeend&amp;#x27;&lt;/span&gt;, css);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      dq(&lt;span class=&#34;string&#34;&gt;&amp;#x27;body&amp;#x27;&lt;/span&gt;).insertAdjacentHTML(&lt;span class=&#34;string&#34;&gt;&amp;#x27;beforeend&amp;#x27;&lt;/span&gt;, html);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;setTimeout&lt;/span&gt;(&lt;span class=&#34;function&#34;&gt;() =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          dq(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.long-url&amp;#x27;&lt;/span&gt;).focus();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;, &lt;span class=&#34;number&#34;&gt;50&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; screenWidth = &lt;span class=&#34;built_in&#34;&gt;window&lt;/span&gt;.screen.width;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; _left = (screenWidth - (dq(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.dialog-container&amp;#x27;&lt;/span&gt;).offsetWidth)) / &lt;span class=&#34;number&#34;&gt;2&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      dq(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.dialog-container&amp;#x27;&lt;/span&gt;).style.marginLeft = _left + &lt;span class=&#34;string&#34;&gt;&amp;#x27;px&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      suo_now &amp;amp;&amp;amp; &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.shortUrl(&lt;span class=&#34;built_in&#34;&gt;window&lt;/span&gt;.location.href);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      dq(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.bm_btns&amp;#x27;&lt;/span&gt;).addEventListener(&lt;span class=&#34;string&#34;&gt;&amp;#x27;click&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.handle);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    handle: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (!event.target.id) &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; url = dq(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.long-url&amp;#x27;&lt;/span&gt;).value || &lt;span class=&#34;built_in&#34;&gt;window&lt;/span&gt;.location.href;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; button = event.target.id;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; oldText = event.target.innerText;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (button == &lt;span class=&#34;string&#34;&gt;&amp;#x27;operation&amp;#x27;&lt;/span&gt;)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (oldText==&lt;span class=&#34;string&#34;&gt;&amp;#x27;生成&amp;#x27;&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          suoIm.shortUrl(url);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          event.target.innerText = &lt;span class=&#34;string&#34;&gt;&amp;#x27;清空&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          dq(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.long-url&amp;#x27;&lt;/span&gt;).value = &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          event.target.innerText = &lt;span class=&#34;string&#34;&gt;&amp;#x27;生成&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (button == &lt;span class=&#34;string&#34;&gt;&amp;#x27;copy&amp;#x27;&lt;/span&gt; &amp;amp;&amp;amp; !dq(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.long-url&amp;#x27;&lt;/span&gt;).value)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          dq(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.long-url&amp;#x27;&lt;/span&gt;).setAttribute(&lt;span class=&#34;string&#34;&gt;&amp;#x27;placeholder&amp;#x27;&lt;/span&gt;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;请先点 [生成] 后再复制&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;keyword&#34;&gt;return&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dq(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.dialog-container&amp;#x27;&lt;/span&gt;).remove();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        dq(&lt;span class=&#34;string&#34;&gt;&amp;#x27;style:last-child&amp;#x27;&lt;/span&gt;).remove();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    shortUrl: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;long_url&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;comment&#34;&gt;/*&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;      let long_url = &amp;#x27;https://www.bilibili.com/video/BV1EW411u7th?p=1&amp;#x27;;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;comment&#34;&gt;      */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.jsonp(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        format:&lt;span class=&#34;string&#34;&gt;&amp;#x27;jsonp&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        key: suo_key,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        expireDate:&lt;span class=&#34;string&#34;&gt;&amp;#x27;2030-03-31&amp;#x27;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        url: &lt;span class=&#34;built_in&#34;&gt;encodeURIComponent&lt;/span&gt;(long_url)&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;,&lt;span class=&#34;string&#34;&gt;&amp;#x27;jsoncallback&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    jsonp: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;data, callback&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; queryString = &lt;span class=&#34;string&#34;&gt;&amp;#x27;?&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;for&lt;/span&gt;(&lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; k &lt;span class=&#34;keyword&#34;&gt;in&lt;/span&gt; data)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          queryString += k + &lt;span class=&#34;string&#34;&gt;&amp;#x27;=&amp;#x27;&lt;/span&gt; + data[k] + &lt;span class=&#34;string&#34;&gt;&amp;#x27;&amp;amp;&amp;#x27;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/*回调函数*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; _url = suo_api + queryString + &lt;span class=&#34;string&#34;&gt;&amp;#x27;callback=&amp;#x27;&lt;/span&gt; + callback;  &lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; head = &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&#34;string&#34;&gt;&amp;#x27;head&amp;#x27;&lt;/span&gt;)[&lt;span class=&#34;number&#34;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; script = &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.createElement(&lt;span class=&#34;string&#34;&gt;&amp;#x27;script&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        head.appendChild(script);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/*创建jsonp回调函数*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;window&lt;/span&gt;[callback] = &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;params&#34;&gt;json&lt;/span&gt; =&amp;gt;&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          dq(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.long-url&amp;#x27;&lt;/span&gt;).value = json.url;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          dq(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.long-url&amp;#x27;&lt;/span&gt;).select();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          dq(&lt;span class=&#34;string&#34;&gt;&amp;#x27;#copy&amp;#x27;&lt;/span&gt;).addEventListener(&lt;span class=&#34;string&#34;&gt;&amp;#x27;click&amp;#x27;&lt;/span&gt;, &lt;span class=&#34;built_in&#34;&gt;this&lt;/span&gt;.copyText);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          head.removeChild(script);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;          &lt;span class=&#34;built_in&#34;&gt;window&lt;/span&gt;[callback] = &lt;span class=&#34;literal&#34;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/*发送请求*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        script.src = _url;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    copyText: &lt;span class=&#34;function&#34;&gt;&lt;span class=&#34;keyword&#34;&gt;function&lt;/span&gt;(&lt;span class=&#34;params&#34;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; ele = dq(&lt;span class=&#34;string&#34;&gt;&amp;#x27;.long-url&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &lt;span class=&#34;keyword&#34;&gt;if&lt;/span&gt; (navigator.userAgent.match(&lt;span class=&#34;regexp&#34;&gt;/ipad|iphone/i&lt;/span&gt;)) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;keyword&#34;&gt;let&lt;/span&gt; range = &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.createRange();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        range.selectNode(ele);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;window&lt;/span&gt;.getSelection().addRange(range);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.execCommand(&lt;span class=&#34;string&#34;&gt;&amp;#x27;copy&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;comment&#34;&gt;/*Remove the selections - &lt;span class=&#34;doctag&#34;&gt;NOTE:&lt;/span&gt; Should use*/&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;window&lt;/span&gt;.getSelection().removeAllRanges();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125; &lt;span class=&#34;keyword&#34;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ele.focus();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        ele.select();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;        &lt;span class=&#34;built_in&#34;&gt;document&lt;/span&gt;.execCommand(&lt;span class=&#34;string&#34;&gt;&amp;#x27;copy&amp;#x27;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;      &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  &amp;#125;;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;  suoIm.show();&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&#34;line&#34;&gt;&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
              &lt;/div&gt;
            &lt;/details&gt;
&lt;!-- - [运行](javascript:dwz()) --&gt;
&lt;ul&gt;
&lt;li&gt;测试: &lt;i class=&#34;fa fa-angle-double-right&#34;&gt;&lt;/i&gt; &lt;a href=&#34;javascript:(function(){&#39;use%20strict&#39;;const%20suo_now=true;const%20suo_api=&#39;https://suo.im/api.htm&#39;;const%20suo_key=&#39;5f0729c5b1b63c45d0cb8173@ae63a2ad212f6e56088ab7814732c4c0&#39;;const%20dq=css=&gt;document.querySelector(css);let%20suoIm={show:function(){let%20content=&#39;也可以输入长网址：&#39;;let%20css=`&lt;style&gt;body{line-height:1.65}.dialog-container{position:fixed;top:25px;width:40%;min-width:300px;margin:0%20auto;border:1px%20solid#ddd;border-radius:4px;background-color:#fff;z-index:99999}.ctrlV-content{padding:10px}.bm_btns{float:right;margin-right:20px;margin-bottom:10px}.long-url{display:block;width:98%;margin-top:10px;padding-left:0.3em;border:1px%20solid#ddd;border-radius:4px;line-height:28px}.mybtn{width:80px;margin-right:6px;padding:0!important;border:none;border-radius:10px;background:#981a1a;color:#fff;font-size:14px;line-height:28px}.mybtn:hover{background-color:#0371df!important}#cancel{background:#2d2d2d}&lt;/style&gt;`;let%20html=`&lt;div%20class=&#39;dialog-container&#39;&gt;&lt;div%20class=&#39;ctrlV-content&#39;&gt;${content}&lt;input%20class=&#39;long-url&#39;value=&#39;&#39;placeholder=&#39;为空则默认为当前网址&#39;&gt;&lt;/div&gt;&lt;div%20class=&#39;bm_btns&#39;&gt;&lt;button%20id=&#39;operation&#39;class=&#39;mybtn&#39;&gt;${suo_now?&#39;清空&#39;:&#39;生成&#39;}&lt;/button&gt;&lt;button%20id=&#39;copy&#39;class=&#39;mybtn&#39;&gt;复制&lt;/button&gt;&lt;button%20id=&#39;cancel&#39;class=&#39;mybtn&#39;&gt;取消&lt;/button&gt;&lt;/div&gt;&lt;/div&gt;`;dq(&#39;head&#39;).insertAdjacentHTML(&#39;beforeend&#39;,css);dq(&#39;body&#39;).insertAdjacentHTML(&#39;beforeend&#39;,html);setTimeout(()=&gt;{dq(&#39;.long-url&#39;).focus()},50);let%20screenWidth=window.screen.width;let%20_left=(screenWidth-(dq(&#39;.dialog-container&#39;).offsetWidth))/2;dq(&#39;.dialog-container&#39;).style.marginLeft=_left+&#39;px&#39;;suo_now&amp;&amp;this.shortUrl(window.location.href);dq(&#39;.bm_btns&#39;).addEventListener(&#39;click&#39;,this.handle)},handle:function(){if(!event.target.id)return;let%20url=dq(&#39;.long-url&#39;).value||window.location.href;let%20button=event.target.id;let%20oldText=event.target.innerText;if(button==&#39;operation&#39;){if(oldText==&#39;生成&#39;){suoIm.shortUrl(url);event.target.innerText=&#39;清空&#39;}else{dq(&#39;.long-url&#39;).value=&#39;&#39;;event.target.innerText=&#39;生成&#39;}}else{if(button==&#39;copy&#39;&amp;&amp;!dq(&#39;.long-url&#39;).value){dq(&#39;.long-url&#39;).setAttribute(&#39;placeholder&#39;,&#39;请先点%20[生成]%20后再复制&#39;);return}dq(&#39;.dialog-container&#39;).remove();dq(&#39;style:last-child&#39;).remove()}},shortUrl:function(long_url){this.jsonp({format:&#39;jsonp&#39;,key:suo_key,expireDate:&#39;2030-03-31&#39;,url:encodeURIComponent(long_url)},&#39;jsoncallback&#39;)},jsonp:function(data,callback){let%20queryString=&#39;?&#39;;for(let%20k%20in%20data){queryString+=k+&#39;=&#39;+data[k]+&#39;&amp;&#39;}let%20_url=suo_api+queryString+&#39;callback=&#39;+callback;let%20head=document.getElementsByTagName(&#39;head&#39;)[0];let%20script=document.createElement(&#39;script&#39;);head.appendChild(script);window[callback]=json=&gt;{dq(&#39;.long-url&#39;).value=json.url;dq(&#39;.long-url&#39;).select();dq(&#39;#copy&#39;).addEventListener(&#39;click&#39;,this.copyText);head.removeChild(script);window[callback]=null};script.src=_url},copyText:function(){let%20ele=dq(&#39;.long-url&#39;);if(navigator.userAgent.match(/ipad|iphone/i)){let%20range=document.createRange();range.selectNode(ele);window.getSelection().addRange(range);document.execCommand(&#39;copy&#39;);window.getSelection().removeAllRanges()}else{ele.focus();ele.select();document.execCommand(&#39;copy&#39;)}}};suoIm.show()})();&#34; title=&#34;点击运行&#34;&gt;短网址&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;安装: 将上一行的 &lt;code&gt;短网址&lt;/code&gt; 拖入到书签栏即可&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- 引用javascript:
1.不能有双引号（换成单引号）
2 压缩 https://c.runoob.com/front-end/51
3 空格换为%20
--&gt;

&lt;h2 id=&#34;IOS捷径&#34;&gt;&lt;a href=&#34;#IOS捷径&#34; class=&#34;headerlink&#34; title=&#34;IOS捷径&#34;&gt;&lt;/a&gt;IOS捷径&lt;/h2&gt;&lt;p&gt;地址: &lt;a href=&#34;https://www.icloud.com/shortcuts/b3197e3d078c4a05a000fef329adabb2&#34;&gt;https://www.icloud.com/shortcuts/b3197e3d078c4a05a000fef329adabb2&lt;/a&gt;&lt;br&gt;&lt;img src=&#34;https://7bu.top/2020/07/12/858413a022241.png&#34; alt=&#34;扫码在safari浏览器中打开&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;更多功能&#34;&gt;&lt;a href=&#34;#更多功能&#34; class=&#34;headerlink&#34; title=&#34;更多功能&#34;&gt;&lt;/a&gt;更多功能&lt;/h2&gt;&lt;div class=&#39;checkbox green checked&#39;&gt;&lt;input type=&#34;checkbox&#34; checked=&#34;checked&#34;/&gt;
            &lt;p&gt;密码短网址&lt;/p&gt;
            &lt;/div&gt;
&lt;div class=&#39;checkbox green checked&#39;&gt;&lt;input type=&#34;checkbox&#34; checked=&#34;checked&#34;/&gt;
            &lt;p&gt;匿名网址&lt;/p&gt;
            &lt;/div&gt;
&lt;div class=&#39;checkbox green checked&#39;&gt;&lt;input type=&#34;checkbox&#34; checked=&#34;checked&#34;/&gt;
            &lt;p&gt;统计分析&lt;/p&gt;
            &lt;/div&gt;

&lt;blockquote&gt;
&lt;p&gt;请访问官网: &lt;a href=&#34;https://suo.im/&#34;&gt;https://suo.im/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- &lt;script src=&#34;/js/suo.im.js&#34;&gt;&lt;/script&gt; --&gt;</content>
        <category term="短网址生成" />
        <updated>2020-07-12T05:46:41.000Z</updated>
    </entry>
</feed>
