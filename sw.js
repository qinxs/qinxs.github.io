const cdn={gh:{jsdelivr:"https://cdn.jsdelivr.net/gh",fastly:"https://fastly.jsdelivr.net/gh",gcore:"https://gcore.jsdelivr.net/gh",testingcf:"https://testingcf.jsdelivr.net/gh",test1:"https://test1.jsdelivr.net/gh",tianli:"https://cdn1.tianli0.top/gh"},combine:{jsdelivr:"https://cdn.jsdelivr.net/combine",fastly:"https://fastly.jsdelivr.net/combine",gcore:"https://gcore.jsdelivr.net/combine",testingcf:"https://testingcf.jsdelivr.net/combine",test1:"https://test1.jsdelivr.net/combine",tianli:"https://cdn1.tianli0.top/combine"},npm:{jsdelivr:"https://cdn.jsdelivr.net/npm",fastly:"https://fastly.jsdelivr.net/npm",gcore:"https://gcore.jsdelivr.net/npm",testingcf:"https://testingcf.jsdelivr.net/npm",test1:"https://test1.jsdelivr.net/npm",eleme:"https://npm.elemecdn.com",unpkg:"https://unpkg.com",tianli:"https://cdn1.tianli0.top/npm"}};self.addEventListener("install",async()=>{await self.skipWaiting()}),self.addEventListener("activate",async()=>{await self.clients.claim()}),self.addEventListener("fetch",async t=>{try{var e=navigator,{saveData:n,effectiveType:s}=e.connection||e.mozConnection||e.webkitConnection||{};if(n||/2g/.test(s))return;t.respondWith(handleRequest(t.request))}catch(t){}});async function progress(t){return new Response(await t.arrayBuffer(),{status:t.status,headers:t.headers})}function handleRequest(t){const e=[];t=t.url;let n=new URL(t);var s=n.pathname.split("/")[1];for(const i in cdn)if(i===s)for(const a in cdn[i]){var r=cdn[i][a]+n.pathname.replace("/"+s,"");e.push(r)}if(e.length)return fetchAny(e);throw new Error("failure")}function createPromiseAny(){Promise.any=function(t){return new Promise((e,n)=>{let s=(t=Array.isArray(t)?t:[]).length,r=[];if(0===s)return n(new AggregateError("All promises were rejected"));t.forEach(t=>{t instanceof Promise?t.then(t=>e(t),t=>{s--,r.push(t),0===s&&n(new AggregateError(r))}):n(t)})})}}function fetchAny(t){const s=new AbortController,r=s.signal;t=t.map(t=>new Promise((e,n)=>{fetch(t,{signal:r}).then(progress).then(t=>{t=t.clone();200!==t.status&&n(null),s.abort(),e(t)}).catch(()=>n(null))}));return Promise.any||createPromiseAny(),Promise.any(t).then(t=>t).catch(()=>null)}